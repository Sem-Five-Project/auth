# =========================
# Production Profile (DigitalOcean)
# =========================
SPRING_PROFILES_ACTIVE=production

# Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=120000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.keepalive-time=30000
spring.datasource.hikari.leak-detection-threshold=20000

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# Server Configuration for DigitalOcean
server.port=${PORT:8080}
server.servlet.context-path=/api

# HTTPS Configuration (DigitalOcean App Platform handles SSL termination)
server.ssl.enabled=false
server.forward-headers-strategy=framework
server.use-forward-headers=true

# Trust proxy headers for HTTPS
server.tomcat.remote-ip-header=x-forwarded-for
server.tomcat.protocol-header=x-forwarded-proto
server.tomcat.protocol-header-https-value=https

# Actuator Configuration
management.endpoints.web.base-path=/actuator
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always

# Security / SSL
server.ssl.enabled=false
server.forward-headers-strategy=framework

# CORS (Update with your actual frontend domain)
cors.allowed.origins=${CORS_ALLOWED_ORIGINS:https://your-frontend-domain.com,https://localhost:3000}

# JWT
jwt.secret=${JWT_SECRET}
jwt.access-token-expiration=${JWT_ACCESS_TOKEN_EXPIRATION:900000}
jwt.refresh-token-expiration=${JWT_REFRESH_TOKEN_EXPIRATION:604800000}

# PayHere Configuration (HTTPS URLs for production)
payhere.merchant.id=${PAYHERE_MERCHANT_ID}
payhere.merchant-secret=${PAYHERE_MERCHANT_SECRET}
payhere.notify.url=${PAYHERE_NOTIFY_URL}
payhere.return.url=${PAYHERE_RETURN_URL}
payhere.cancel.url=${PAYHERE_CANCEL_URL}

# Email configuration
default.from.email=${DEFAULT_FROM_EMAIL:sepgroup15@gmail.com}
sendgrid.api.key=${SENDGRID_API_KEY}

# Logging
logging.level.root=INFO
logging.level.com.edu.tutor_platform=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
