# Production Profile Configuration
# Database Configuration (will be overridden by Railway environment variables)
# spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/tutorplatform}
# spring.datasource.username=${DATABASE_USERNAME:postgres}
# spring.datasource.password=${DATABASE_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver




spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.profiles.active=production
# JPA Configuration for production
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.generate_statistics=false

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000

# JWT Configuration (use environment variables in production)
jwt.secret=${JWT_SECRET:myProductionSecretKey123456789012345678901234567890}
jwt.access-token-expiration=${JWT_ACCESS_TOKEN_EXPIRATION:900000}
jwt.refresh-token-expiration=${JWT_REFRESH_TOKEN_EXPIRATION:604800000}

# PayHere Production Configuration
payhere.merchant.id=${PAYHERE_MERCHANT_ID:1231565}
payhere.merchant-secret=${PAYHERE_MERCHANT_SECRET:MzU1NzE2OTQxMzU1NzkwMzM3MTIzMzkwMDA3MjM3MDEwMzkzMjg=}
payhere.notify.url=${PAYHERE_NOTIFY_URL:https://your-domain.railway.app/api/payment/notify}
payhere.return.url=${PAYHERE_RETURN_URL:https://your-domain.railway.app/payment/success}
payhere.cancel.url=${PAYHERE_CANCEL_URL:https://your-domain.railway.app/payment/cancel}

# SendGrid Production Configuration
sendgrid.api.key=${SENDGRID_API_KEY:SG.your-production-key}

# Server Configuration
server.port=${PORT:8080}
server.servlet.context-path=/api

# Security Configuration
server.ssl.enabled=false
server.forward-headers-strategy=framework

# Logging Configuration for production
logging.level.root=INFO
logging.level.com.edu.tutor_platform=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN

# Actuator endpoints for monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always

# CORS Configuration for production
cors.allowed.origins=${CORS_ALLOWED_ORIGINS:https://your-frontend-domain.com}

# Cache Configuration
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory